name: Increment Minor Version

on:
  pull_request:
    branches:
      - main
    types:
      - closed

permissions:
  contents: write

jobs:
  update-minor-version:
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main' && github.event.pull_request.head.ref == 'dev'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js (for version handling)
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Increment minor version
        id: extract_version  # ID für die Referenzierung
        run: |
          # Hol die Versionsnummer aus package.json
          version=$(node -p "require('./package.json').version")
          echo "Current version: $version"

          # Zerlege die Version und erhöhe die Minor-Nummer
          IFS='.' read -r major minor patch <<< "$version"
          minor=$((minor + 1))
          patch=0
          new_version="$major.$minor.$patch"
          echo "NEW_VERSION=$new_version" >> $GITHUB_OUTPUT
          
          # Aktualisiere die Version in package.json
          node -e "const fs = require('fs'); const version = '$new_version'; const packageJson = require('./package.json'); packageJson.version = version; fs.writeFileSync('./package.json', JSON.stringify(packageJson, null, 2));"
          echo "Updated package.json with version: $new_version"

          # Aktualisiere die Version in README.md
          sed -i "s/Version: .*/Version: $new_version/" README.md
          echo "Updated README.md with version: $new_version"

      - name: Commit changes to main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git add package.json README.md
          git commit -m "Increment minor version to ${{ steps.extract_version.outputs.new_version }}"
          git push origin main
    
      - name: Checkout dev branch
        uses: actions/checkout@v3
        with:
          ref: dev  # Sicherstellen, dass der dev-Branch gecheckt wird
          
      - name: Sync updated version to dev
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Synchronisiere die aktualisierte Version in dev
          sed -i "s/Version: .*/Version: ${{ steps.extract_version.outputs.new_version }}/" README.md
         
          # Aktualisiere die Version in package.json
          node -e "const fs = require('fs'); const version = '${{ steps.extract_version.outputs.new_version }}'; const packageJson = require('./package.json'); packageJson.version = version; fs.writeFileSync('./package.json', JSON.stringify(packageJson, null, 2));"
          
          echo "Synchronized dev branch with version: ${{ steps.extract_version.outputs.new_version }}"

          # Commit and push changes to dev
          git add package.json README.md
          git commit -m "Sync version from main to dev: ${{ steps.extract_version.outputs.new_version }}"
          git push origin dev